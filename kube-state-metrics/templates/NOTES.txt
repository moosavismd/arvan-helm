** Please be patient while the chart is being deployed **

Watch the kube-state-metrics Deployment status using the command:

    arvan paas get deploy -w --namespace {{ .Release.Namespace }} {{ template "common.names.fullname" . }}

kube-state-metrics can be accessed via port "{{ .Values.service.port }}" on the following DNS name from within your cluster:

    {{ template "common.names.fullname" . }}.{{ .Release.Namespace }}.svc.cluster.local

To access kube-state-metrics from outside the cluster execute the following commands:

{{- if contains "LoadBalancer" .Values.service.type }}

    NOTE: It may take a few minutes for the LoadBalancer IP to be available.
    Watch the status with: 'arvan paas get svc --namespace {{ .Release.Namespace }} -w {{ template "common.names.fullname" . }}'

{{- $port:=.Values.service.port | toString }}

    export SERVICE_IP=$(arvan paas get svc --namespace {{ .Release.Namespace }} {{ template "common.names.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
    echo "URL: http://$SERVICE_IP{{- if ne $port "80" }}:{{ .Values.service.port }}{{ end }}/"

{{- else if contains "ClusterIP"  .Values.service.type }}

    echo "URL: http://127.0.0.1:9100/"
    arvan paas port-forward --namespace {{ .Release.Namespace }} svc/{{ template "common.names.fullname" . }} 9100:{{ .Values.service.port }}

{{- else if contains "NodePort" .Values.service.type }}

    export NODE_PORT=$(arvan paas get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ template "common.names.fullname" . }})
    export NODE_IP=$(arvan paas get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
    echo "URL: http://$NODE_IP:$NODE_PORT/"

{{- end }}

{{- include "kube-state-metrics.checkRollingTags" . }}
